return {
  {
    "folke/snacks.nvim",
    priority = 1000,
    lazy = false,
    keys = {
      { "<leader>/", function() require("snacks").picker.grep() end, desc = "Grep" },
      { "<leader>:", function() require("snacks").picker.command_history() end, desc = "Command History" },
      { "<leader>fb", function() require("snacks").picker.buffers() end, desc = "Buffers" },
      { "<leader>fF", function() require("snacks").picker.files() end, desc = "Find Files" },
      -- { "<leader>gb", function() require("snacks").picker.git_branches() end, desc = "Git Branches" },
      -- { "<leader>gl", function() require("snacks").picker.git_log() end, desc = "Git Log" },
      -- { "<leader>gL", function() require("snacks").picker.git_log_line() end, desc = "Git Log Line" },
      -- { "<leader>gs", function() require("snacks").picker.git_status() end, desc = "Git Status" },
      -- { "<leader>gS", function() require("snacks").picker.git_stash() end, desc = "Git Stash" },
      -- { "<leader>gd", function() require("snacks").picker.git_diff() end, desc = "Git Diff (Hunks)" },
      -- { "<leader>gf", function() require("snacks").picker.git_log_file() end, desc = "Git Log File" },
      { '<leader>f"', function() require("snacks").picker.registers() end, desc = "Registers" },
      { "<leader>fl", function() require("snacks").picker.lines() end, desc = "Buffer Lines" },
      { "<leader>fC", function() require("snacks").picker.command_history() end, desc = "Command History" },
      { "<leader>fc", function() require("snacks").picker.commands() end, desc = "Commands" },
      { "<leader>fD", function() require("snacks").picker.diagnostics() end, desc = "Diagnostics" },
      { "<leader>fd", function() require("snacks").picker.diagnostics_buffer() end, desc = "Buffer Diagnostics" },
      { "<leader>fh", function() require("snacks").picker.help() end, desc = "Help Pages" },
      { "<leader>fi", function() require("snacks").picker.highlights() end, desc = "Highlights" },
      { "<leader>fm", function() require("snacks").picker.man() end, desc = "Man Pages" },
      { "<leader>fq", function() require("snacks").picker.qflist() end, desc = "Quickfix List" },
      { "<leader>fT", function() require("snacks").picker.colorschemes() end, desc = "Colorschemes" },
      -- LSP
      { "gd", function() require("snacks").picker.lsp_definitions() end, desc = "Goto Definition" },
      { "gD", function() require("snacks").picker.lsp_declarations() end, desc = "Goto Declaration" },
      { "gr", function() require("snacks").picker.lsp_references() end, nowait = true, desc = "References" },
      { "gI", function() require("snacks").picker.lsp_implementations() end, desc = "Goto Implementation" },
      { "gy", function() require("snacks").picker.lsp_type_definitions() end, desc = "Goto Type Definition" },
    },
    opts = {
      bigfile = { enabled = true },
      -- dashboard = { enabled = true },
      -- explorer = { enabled = true },
      -- indent = { enabled = true },
      input = { enabled = true },
      picker = {
        enabled = true,
        ui_select = true,
        layout = {
          cycle = true,
        },
      },
      notifier = {
        enabled = true,
        style = "minimal",
        top_down = false,

        margin = { bottom = 1, right = 1 },
      },
      -- quickfile = { enabled = true },
      -- scope = { enabled = true },
      -- scroll = { enabled = true },
      -- statuscolumn = { enabled = true },
      -- words = { enabled = true },

      styles = {
        float = { backdrop = false },
      },
    },
  },
}
